<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        niEAAAAASUVORK5CYII=
</value>
  </data>
</root>